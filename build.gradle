plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta4'
    id 'maven-publish'
}

repositories {
    // Central
    maven { url = "https://maven-central-asia.storage-download.googleapis.com/maven2/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    // ProtocolLib repo
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    // Libby repo
    maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    implementation(project(':legacy'))

    compileOnly("dev.folia:folia-api:1.20.6-R0.1-SNAPSHOT")
    compileOnly("com.comphenix.protocol:ProtocolLib:5.3.0")

    // Dependency resolver at runtime
    implementation("com.alessiodp.libby:libby-bukkit:2.0.0-SNAPSHOT")
    // S3 storage backend
    compileOnly("io.minio:minio:8.5.12")
    // MongoDB Driver
    compileOnly("org.mongodb:mongodb-driver-sync:5.2.0")
    // Compress
    compileOnly("com.github.luben:zstd-jni:1.5.6-8")
    compileOnly("org.lz4:lz4-java:1.8.0")
    // Log
    compileOnly("org.apache.logging.log4j:log4j-core:2.24.3")
}

allprojects {
    group = 'me.jumper251.replay'
    version = '22.11.0'

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    java {
        sourceCompatibility = 21
        targetCompatibility = 21
    }

    compileJava {
        options.encoding("UTF-8")
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
            }
        }
    }
}

shadowJar {
    archiveFileName = 'Replay.jar'

    relocate 'com.alessiodp.libby', 'me.jumper251.replay.libs.com.alessiodp.libby'
    relocate 'com.comphenix.packetwrapper', 'me.jumper251.replay.libs.com.comphenix.packetwrapper'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

build {
    dependsOn shadowJar
}